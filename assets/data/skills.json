{
  "display":"skill-popup-1",
  "skills":[
  {"type": "Training/Mentoring/<wbr>Teaching",
   "amnt": 0.9,
   "desc": "<p>I enjoy working in a team setting, and I also enjoy communicating with both technical and non-technical audiences. For example, I have:</p><ul><li>Walked through Proof of Concept software with potential clients</li><li>Addressed parents' questions and concerns for a summer programming class</li><li>Trained co-workers on how to scrape information using NLP</li><li>Mentored interns one-on-one and helped them feel welcome in the workplace</li><li>Presented dozens of lectures to 100+ students in a 2-story lecture hall.</li></ul>"},
  {"type": "Statistics/Classifiers",
   "amnt": 0.8,
   "desc": "<p>I studied CTMC's for my master's research, and my work at Kingland has encouraged me to learn Naive Bayes classifiers to the point where I can teach it.</p><ul><li>I have implemented a custom Naive Bayes Classifier from scratch that used log-normally distributed, historical trend data</li><li>I have implemented, and I understand the math behind Continuous Time Markov Chains<ul><li>For small models, one can directly solve the steady state</li><li>For models too large for memory, I can simulate paths in the model</li><li>For more complicated queries, I have experience using the probabilistic model checker, <a href=\"http://www.prismmodelchecker.org/\">PRISM</a></li></ul></li></ul>"},
  {"type": "Machine Learning",
   "amnt": 0.6,
   "desc": "<p>Through classes and my work at Kingland, I have an awareness of many Machine Learning methods and confidence in a few detailed below. I also understand the math behind neural networks (e.g. the chain rule).</p><ul><li>I have implemented a recurrent neural network using <a href=\"https://keras.io/\">Keras</a>/Tensorflow</li><li>I have read, and I understand academic literature on NLP techniques like word2vec/doc2vec</li><li>I have written algorithms to train Naive-Bayes classifiers and derived the most relevant terms using a term-frequency/inverse-window-frequency metric</li></ul>"},
  {"type": "Natural Language Processing",
   "amnt": 0.7,
   "desc": "<p>I have done a lot of work with the open source NLP library <a href=\"https://spacy.io/\">spaCy</a>.</p><ul><li>I've used syntax parse trees to scrape information from data filed with the Securities and Exchange Commision</li><li>I've created several heuristics for tying named entities to entities in a structured, relational database.</li><li>I've investigated using other machine learning techniques for classifying sentences/windows of text.</li></ul>"},
  {"type": "Bioinformatics/<wbr>Dynamic Prog.",
   "amnt": 0.8,
   "desc": "<p>I have implemented algorithms using Suffix Trees, Tries, maximal cliques and the Longest Common Subsequence problem for general text processing with Kingland Systems. My master's work in DNA nanotechnology introduced me to many of these algorithms.</p>"},
  {"type": "Design Patterns/Architecture",
   "amnt": 0.8,
   "desc": "<p>I love learning about and applying design patterns for both statically and dynamically typed languages. My favorite books are:</p><ul><li><i><a href=\"http://shop.oreilly.com/product/9780596007126.do\">Head First Design Patterns</a></i> by Bates, Sierra, Freeman and Robson.</li><li><i><a href=\"http://gameprogrammingpatterns.com/\">Game Programming Patterns</a></i> by Nystrom</li></ul><p>My favorite pattern is the <i>composite pattern</i>. One can implicitly use it with maps/dicts, and a surprising number of things work better as trees (e.g. scene-graphs, game entities and ETL processes).</p>"},
  {"type": "RDBS Design",
   "amnt": 0.6,
   "desc": "<p>I have designed two relational schemas, one for a volunteer project and one for Kingland. I have learned about 1st/2nd/3rd and Boyce-Codd Normal Form, and I am confident I can design sensible schemas with referential integrity.</p>"},
  {"type": "Technical Writing/<wbr>Publishing",
   "amnt": 0.6,
   "desc": "<p>For both my bachelor's and master's degrees I wrote a 70 page thesis. I have also authored one conference paper and co-authored another. I have received compliments for my documentation at work (though that's proprietary ;P). Bibliography:</p><ul><li> Nakayama, Brian. Modeling Technologies and Methods for DNA Origami. Diss. Iowa State University, 2016.</li><li>Thein Than Tun, Robyn Lutz, Brian Nakayama, Yijun Yu, Divita Mathur and Bashar Nuseibeh. \"The role of environmental assumptions in failures of DNA nanosystems,\" COUFLESS 2015, Florence, Italy. ACM, 2015.</li><li>Nakayama, Brian and Bahr, David, \"Universal Computation in the Prisoner's Dilemma Game,\" UCNC 2014, London, Ontario. Springer: Lecture Notes in Computer Science, 2014.</li><li>Nakayama, Brian. Universal Computation in the Prisoner's Dilemma Game. Diss. Regis University, 2013.</li></ul>"}
  ]
}
